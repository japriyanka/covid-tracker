{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/covidimage.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","covidimage","src","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3e39ce47.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","import React from 'react';\nimport { Card, CardContent, Typography, Grid, StylesProvider } from '@material-ui/core';\nimport styles from './Cards.module.css';\nimport CountUp from 'react-countup';\nimport cx from 'classnames';\n\n\nconst Cards = ({data : {confirmed, recovered, deaths, lastUpdate}}) => {\n    if (!confirmed){\n        return \"Loading...\";\n    }\n    return (\n        <div className = {styles.container}>\n            <Grid container spacing={3} justify=\"center\">\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\n                    <CardContent>\n                        <Typography color = \"textSecondary\" gutterBottom>Infected</Typography>\n                        <Typography variant = \"h5\">\n                            <CountUp start = {0} end = {confirmed.value} duration = {2.5} separator = \",\"  />\n                                </Typography>\n                        <Typography color = \"textSecondary\"> {new Date (lastUpdate).toDateString()}</Typography>\n                        <Typography variant = \"body2\">Number of active cases of COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\n                    <CardContent>\n                        <Typography color = \"textSecondary\" gutterBottom>Recovered</Typography>\n                        <Typography variant = \"h5\">\n                            <CountUp start = {0} end = {recovered.value} duration = {2.5} separator = \",\"  />\n                        </Typography>\n                        <Typography color = \"textSecondary\"> {new Date (lastUpdate).toDateString()}</Typography>\n                        <Typography variant = \"body2\">Number of recoveries from COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\n                    <CardContent>\n                        <Typography color = \"textSecondary\" gutterBottom>Deaths</Typography>\n                        <Typography variant = \"h5\">\n                            <CountUp start = {0} end = {deaths.value} duration = {2.5} separator = \",\"  />\n                        </Typography>\n                        <Typography color = \"textSecondary\"> {new Date (lastUpdate).toDateString()}</Typography>\n                        <Typography variant = \"body2\">Number of deaths caused by COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n\n            </Grid>\n\n        </div>\n    )\n}\n\nexport default Cards;","import axios from 'axios';\n\nconst url = \"https://covid19.mathdro.id/api\";\n\nexport const fetchData = async(country) => {\n  let changeableUrl = url\n  if (country){\n    changeableUrl = `${url}/countries/${country}`;\n  }\n     try{\n       const {data : {confirmed, recovered, lastUpdate, deaths}} = await axios.get(changeableUrl);\n       return {confirmed, recovered, deaths, lastUpdate};\n     }\n     catch (error){\n      console.log(error);\n     }\n     \n}\n\nexport const fetchDailyData = async() => {\n  try{\n    const { data } = await axios.get(`${url}/daily`);\n    \n    const modifiedData = data.map((dailyData) => (\n      {\n        confirmed: dailyData.confirmed.total,\n        deaths: dailyData.deaths.total,\n        date: dailyData.reportDate,\n      }\n    ))\n\n    return modifiedData;\n\n  }\n  catch (error) {\n    console.log(error);\n  }\n}\n\nexport const fetchCountries = async() => {\n  try{\n    const {data : {countries}} = await axios.get(`${url}/countries`);\n    return countries.map ((country) => country.name)\n  }\n  catch(error){\n    console.log(error);\n  }\n}\n\n","import React, {useEffect, useState} from 'react';\nimport {fetchDailyData} from '../../api';\nimport {Line, Bar} from 'react-chartjs-2';\nimport styles from './Chart.module.css';\n\nconst Chart = ({data : {confirmed, deaths, recovered}, country}) => {\n    const [dailyData, setDailyData] = useState([]);\n    useEffect (() => {\n        const fetchAPI = async () => {\n            setDailyData (await fetchDailyData());\n          }\n          fetchAPI(); \n    }, [dailyData]);\n\n    const lineChart = (\n        dailyData.length ? (<Line \n        data = {\n            {\n                labels: dailyData.map(({ date }) => date),\n                datasets: [{\n                    data: dailyData.map(({confirmed}) => confirmed),\n                    label: \"Infected\",\n                    borderColor: '#3333ff',\n                    fill: true\n                }, {\n                    data: dailyData.map(({deaths}) => deaths),\n                    label: \"Deaths\",\n                    borderColor: 'red',\n                    backgroundColor: 'rgba(255, 0, 0, 0.5)',\n                    fill: true\n                }],\n            }\n        }\n        />) : null\n\n    );\n\n    const barChart = (\n        confirmed ? (\n            <Bar\n            data={{\n             labels: ['Infected', 'Recovered', 'Deaths'],\n             datasets: [{\n                 label: 'People',\n                 backgroundColor: [\n                     'rgba(0, 0, 255, 0.5)',\n                     'rgba(0, 255, 0, 0.5)',\n                     'rgba(255, 0, 0, 0.5)'\n                 ],\n                 data:[confirmed.value, recovered.value, deaths.value]\n\n             }]\n            }}\n            options={{\n                legend: {display : false},\n                title: {display : true, text : `Current state in ${country}`}\n\n            }}/>\n        ) : null\n    );\n    return (\n        <div className={styles.container}>\n            {country ? barChart : lineChart}\n        </div>\n    )\n}\n\nexport default Chart;","import React ,{ useState, useEffect } from \"react\";\nimport {NativeSelect, FormControl} from \"@material-ui/core\";\n\nimport styles from './CountryPicker.module.css';\n\nimport {fetchCountries} from '../../api';\n\nconst CountryPicker = ({handleCountryChange}) => {\n    const [fetchedCountries, setFetchedCountries] = useState([])\n    useEffect(() => {\n       const fetchAPI = async() => {\n           setFetchedCountries(await fetchCountries());\n       }\n       fetchAPI();\n    }, [setFetchedCountries]);\n    console.log(fetchedCountries)\n    return(\n        <FormControl className={styles.formControl}>\n            <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\n                <option value =\"\">Global</option>\n                {fetchedCountries.map((country, i) => <option key = {i} value ={country}>{country}</option>)}\n            </NativeSelect>\n        </FormControl>\n    )\n}\n\nexport default CountryPicker;","import React from 'react';\n\n//import CountryPicker from './components/CountryPicker/CountryPicker'\n\nimport {Cards, Chart, CountryPicker} from './components';\nimport styles from './App.module.css';\nimport {fetchData} from './api';\n\nimport covidimage from './images/covidimage.png';\n\nclass App extends React.Component{\n\nstate = {\n    data : {},\n    country: '',\n}\n    async componentDidMount(){\n    const fetchedData = await fetchData();\n    this.setState({data : fetchedData})\n\n}\nhandleCountryChange = async (country) => {\n    const fetchedData = await fetchData(country);\n    this.setState({data : fetchedData, country : country})\n    //fetch the data\n    //set the state\n}\n    render(){\n        const { data, country } = this.state;\n        return(\n            <div className={styles.container}>\n                <img className={styles.covidimage} src = {covidimage} alt=\"COVID-19\"/>\n                <Cards data = {data}/>\n                <CountryPicker handleCountryChange={this.handleCountryChange} />\n                <Chart data = {data} country = {country} />\n            </div>\n        )\n    }\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"covidimage\":\"App_covidimage__V_A7L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};","module.exports = __webpack_public_path__ + \"static/media/covidimage.d7265326.png\";"],"sourceRoot":""}